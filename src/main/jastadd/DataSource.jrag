aspect DataSource {
  inh String Expr        .lookupDataSource();
  inh String Stmt        .lookupDataSource();
  inh String BodyDecl    .lookupDataSource();
  inh String TypeDecl    .lookupDataSource();
  inh String SemanticType.lookupDataSource();

  eq SemanticsClassDecl.getBodyDecl().lookupDataSource() =
    getDataSource().getLITERAL();

  eq Program.getChild().lookupDataSource() = null;


  DlQueryExpr contributes error("class has no data source for querying")
    when lookupDataSource() == null
    to CompilationUnit.problems();

  DlProjectionExpr contributes error("class has no data source for projecting")
    when lookupDataSource() == null
    to CompilationUnit.problems();

  DlTypecaseStmt contributes error("class has no data source for typecasing")
    when lookupDataSource() == null
    to CompilationUnit.problems();

  SemanticTypeAccess contributes error("class has no data source for semantic type")
    when lookupDataSource() == null
    to CompilationUnit.problems();
}


aspect DataSourceBackend {
  inh SemanticsClassDecl Expr    .getKnowBase();
  inh SemanticsClassDecl Stmt    .getKnowBase();
  inh SemanticsClassDecl BodyDecl.getKnowBase();
  inh SemanticsClassDecl TypeDecl.getKnowBase();

  eq SemanticsClassDecl.getBodyDecl().getKnowBase() = this;
  eq Program           .getChild   ().getKnowBase() = null;


  public Dot SemanticsClassDecl.mkAccess() {
    return new Dot(
      lookupType("semantics", "KnowBase").createQualifiedAccess(),
      new MethodAccess("of", new List<Expr>(
        new StringLiteral(getDataSource().getLITERAL()))
      )
    );
  }


  public Dot SemanticsClassDecl.mkMethodAccess(String id, Expr... args) {
    List<Expr> argList = new List<>();

    for (Expr arg : args) {
      argList.add(arg);
    }

    return new Dot(mkAccess(), new MethodAccess(id, argList));
  }
}
